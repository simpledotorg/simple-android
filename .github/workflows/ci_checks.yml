name: CI

on:
  push:
    branches:
      - release/*
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  qa_lint:
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2

      - name: Cache Gradle build
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/buildSrc/**/*.kt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: QA Lint
        run: ./gradlew --build-cache --no-daemon lintQaDebug

  qa_unit_tests:
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2

      - name: Cache Gradle build
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/buildSrc/**/*.kt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: QA Unit Tests
        run: ./gradlew --build-cache --no-daemon testQaDebugUnitTest

  qa_purge_env:
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Purge QA server
        run: |
          curl -v --request DELETE \
          --url https://api-qa.simple.org/qa/purge \
          --header 'Authorization: Bearer ${{ secrets.QA_PURGE_TOKEN }}'

  # reactivecircus/android-emulator-runner@v2 requires MacOS to run on
  # https://github.com/ReactiveCircus/android-emulator-runner
  qa_android_tests:
    runs-on: [ macos-latest ]
    timeout-minutes: 30
    needs: [ qa_purge_env ]
    env:
      AVD_API_LEVEL: 27
    steps:
      - uses: actions/checkout@v2

      - name: Cache Gradle build
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/buildSrc/**/*.kt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache AVD
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: ${{ runner.os }}-avd-${{ env.AVD_API_LEVEL }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.AVD_API_LEVEL }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Turn on capturing of flaky tests
        run: cat app/src/androidTest/resources/quarantine_ci.properties > app/src/androidTest/resources/quarantine.properties

      - name: QA Android Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.AVD_API_LEVEL }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew --build-cache --no-daemon connectedQaDebugAndroidTest

  mobius_migration_tests:
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Mobius Migration Tests
        run: ./gradlew :mobius-migration:test

  verify_release_bundles:
    runs-on: [ ubuntu-latest ]
    strategy:
      matrix:
        buildType: [ 'Production' ]
    steps:
      - uses: actions/checkout@v2

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build ${{ matrix.buildType }} Release bundle
        run: |
          ./gradlew \
          -PrunProguard=true \
          -PdefaultProguardFile=proguard-android.txt \
          bundle${{ matrix.buildType }}Release

  verify_room_schemas:
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          ref: master
          path: master

      - name: Checkout current
        uses: actions/checkout@v2
        with:
          path: current

      - name: Verify existing Room schemas are not modified
        run: current/.github/scripts/compare_directory_contents.sh master/app/schemas/org.simple.clinic.AppDatabase current/app/schemas/org.simple.clinic.AppDatabase

  verify_pr_description:
    runs-on: [ ubuntu-latest ]
    if: github.event_name == 'pull_request'
    steps:
      - name: Verify PR description
        run: |
          QUOTED_PR_DESCRIPTION="$(printf "%q" "${{github.event.pull_request.body}}")"
          PR_DESCRIPTION="$QUOTED_PR_DESCRIPTION"
          STORY_LINK_REGEX='https:\/\/app.clubhouse.io\/simpledotorg\/story\/[0-9]+\/[A-Za-z0-9_-]+'

          if [[ $PR_DESCRIPTION =~ $STORY_LINK_REGEX ]]; then
            exit 0
          else
            echo "PR description doesn't contain a valid story link"
            exit 1
          fi

  verify_changelog_updated:
    runs-on: [ ubuntu-latest ]
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          ref: master
          path: master

      - name: Checkout current
        uses: actions/checkout@v2
        with:
          path: current

      - name: Verify CHANGELOG was updated
        run: current/.github/scripts/verify_file_was_changed.sh master/CHANGELOG.md current/CHANGELOG.md

  fix_strings_ellipsise:
    runs-on: [ ubuntu-latest ]
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}
          fetch-depth: 0
          token: ${{ secrets.SERVICES_ACCESS_TOKEN }}

      - name: Fix ellipsise in strings
        run: .github/scripts/strings_reader.py

      - name: Commit and push
        env:
          USER_NAME: ${{ secrets.USER_NAME }}
          USER_EMAIL: ${{ secrets.USER_EMAIL }}
          BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
        run: .github/scripts/amend_and_push.sh
