name: Build production app bundle

on:
  pull_request:
  workflow_dispatch:
    inputs:
      tramline-input:
        description: "Tramline input"
        required: false

jobs:
  ci-checks:
    if: github.event_name != 'pull_request'
    uses: ./.github/workflows/ci_checks.yml
    with:
      run-build-checks: false

  build_app_bundle:
    runs-on: [ ubuntu-latest ]
    env:
      TERM: dumb
      ORG_GRADLE_PROJECT_KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      ORG_GRADLE_PROJECT_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      ORG_GRADLE_PROJECT_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
    steps:
      - name: Configure Tramline
        if: github.event.inputs.tramline-input != null && github.event.inputs.tramline-input != ''
        id: tramline
        uses: tramlinehq/deploy-action@v0.1.7
        with:
          input: ${{ github.event.inputs.tramline-input }}

      - name: Setup version code and name
        if: github.event.inputs.tramline-input != null && github.event.inputs.tramline-input != ''
        id: version_code_and_name
        run: |
          VERSION_NAME=${{ steps.tramline.outputs.version_name }}
          VERSION_CODE=${{ steps.tramline.outputs.version_code }}

          echo "ORG_GRADLE_PROJECT_VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "ORG_GRADLE_PROJECT_VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV


      - name: Checkout
        if: github.event.inputs.tramline-input == null || github.event.inputs.tramline-input == ''
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Decrypt secrets
        run: gpg --batch --yes --quiet --decrypt --passphrase=${{ secrets.KEYSTORE_PASSPHRASE }} --output release/simple.store release/simple.gpg

      - name: Build release bundle
        run: |
          ./gradlew \
          -PrunProguard=true \
          -PsentryUploadProguard=true \
          -PmanifestEndpoint=${{ vars.MANIFEST_ENDPOINT_PRODUCTION }} \
          -PandroidNdkVersion=${{ vars.NDK_VERSION }} \
          -PsentryDsn=${{ secrets.SENTRY_DSN }} \
          -PsentryEnvironment=production \
          -PdisableScreenshot=true \
          -PallowRootedDevice=false \
          -PdatadogApplicationId=${{ secrets.DATADOG_APPLICATION_ID }} \
          -PdatadogClientToken=${{ secrets.DATADOG_CLIENT_TOKEN }} \
          -PdatadogEnvironment=production \
          -PsentryOrg=${{ vars.SENTRY_ORG }} \
          -PsentryProject=${{ vars.SENTRY_PROJECT }} \
          -PsentryAuthToken=${{ secrets.SENTRY_AUTH_TOKEN }} \
          bundleProductionRelease

      - name: Upload release bundle
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: release.aab
          path: app/build/outputs/bundle/productionRelease/app-production-release.aab

      - name: Clean secrets
        run: |
          rm -f release/simple.store
          
