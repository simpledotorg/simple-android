name: CI

on:
  push:
    branches:
      - release/*
  pull_request:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ci-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  qa_lint:
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2

      - name: Cache Gradle build
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/buildSrc/**/*.kt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: QA Lint
        run: ./gradlew --build-cache --no-daemon lintQaDebug

  qa_unit_tests:
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2

      - name: Cache Gradle build
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/buildSrc/**/*.kt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: QA Unit Tests
        run: ./gradlew --build-cache --no-daemon testQaDebugUnitTest

  # reactivecircus/android-emulator-runner@v2 requires MacOS to run on
  # https://github.com/ReactiveCircus/android-emulator-runner
  qa_android_tests:
    runs-on: [ macos-latest ]
    timeout-minutes: 60
    env:
      AVD_API_LEVEL: 27
      HEROKU_API_KEY: ${{ secrets.SERVICES_HEROKU_API_KEY }}
    steps:
      - name: Checkout Android source
        uses: actions/checkout@v2
        with:
          path: android-app

      - name: Checkout server app source
        uses: actions/checkout@v2
        with:
          repository: simpledotorg/simple-server
          fetch-depth: 0 # Full clone needed for Heroku deploys (https://devcenter.heroku.com/changelog-items/775)
          path: server-app

      - name: Create node dependency hash
        id: create_node_modules_hash
        run: android-app/.github/scripts/compute_node_dependency_hash.sh

      - name: Cache node modules
        id: node-dependency-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            package-lock.json
          key: ${{ runner.os }}-npm-${{ steps.create_node_modules_hash.outputs.node_dep_hash }}

      - name: Install Heroku CLI
        if: steps.node-dependency-cache.outputs.cache-hit != 'true'
        run: npm install heroku

      - name: Link Heroku CLI globally
        run: npm link heroku

      - name: Cache Gradle build
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/buildSrc/**/*.kt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache AVD
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: ${{ runner.os }}-avd-${{ env.AVD_API_LEVEL }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.AVD_API_LEVEL }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Generate server app name
        id: generate-server-app-name
        run: android-app/.github/scripts/generate_heroku_app_name.sh ${{ github.ref }}

      - name: Deploy the server on Heroku
        id: start-simple-server
        run: |
          android-app/.github/scripts/setup_heroku_instance.sh \
          ${{ steps.generate-server-app-name.outputs.heroku_app_name }} \
          ${{ env.HEROKU_API_KEY }} \
          server-app \
          android-app \
          ${{ secrets.HEROKU_SECRET_PROPERTIES }}

      - name: Turn on capturing of flaky tests
        run: cat android-app/app/src/androidTest/resources/quarantine_ci.properties > android-app/app/src/androidTest/resources/quarantine.properties

      - name: QA Android Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.AVD_API_LEVEL }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: android-app/gradlew -p android-app --build-cache --no-daemon -PmanifestEndpoint=https://${{ steps.generate-server-app-name.outputs.heroku_app_name }}.herokuapp.com/api/ connectedQaDebugAndroidTest

      - name: Teardown Heroku instance
        if: always() && (steps.start-simple-server.outcome != 'success' || contains(github.ref, '/release/'))
        run: |
          heroku apps:destroy \
          --app=${{ steps.generate-server-app-name.outputs.heroku_app_name }} \
          --confirm=${{ steps.generate-server-app-name.outputs.heroku_app_name }}

  mobius_migration_tests:
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Mobius Migration Tests
        run: ./gradlew :mobius-migration:test

  verify_release_bundles:
    runs-on: [ ubuntu-latest ]
    strategy:
      matrix:
        buildType: [ 'Production' ]
    steps:
      - uses: actions/checkout@v2

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build ${{ matrix.buildType }} Release bundle
        run: |
          ./gradlew \
          -PrunProguard=true \
          -PdefaultProguardFile=proguard-android.txt \
          bundle${{ matrix.buildType }}Release

  verify_room_schemas:
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          ref: master
          path: master

      - name: Checkout current
        uses: actions/checkout@v2
        with:
          path: current

      - name: Verify existing Room schemas are not modified
        run: current/.github/scripts/compare_directory_contents.sh master/app/schemas/org.simple.clinic.AppDatabase current/app/schemas/org.simple.clinic.AppDatabase

  verify_pr_description:
    runs-on: [ ubuntu-latest ]
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
      - name: Verify PR description
        run: kotlinc -script ".github/scripts/PrCommentCheck.main.kts" "${{ github.event.pull_request.body }}"

  verify_changelog_updated:
    runs-on: [ ubuntu-latest ]
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          ref: master
          path: master

      - name: Checkout current
        uses: actions/checkout@v2
        with:
          path: current

      - name: Verify CHANGELOG was updated
        run: current/.github/scripts/verify_file_was_changed.sh master/CHANGELOG.md current/CHANGELOG.md

  fix_strings_ellipsise:
    runs-on: [ ubuntu-latest ]
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}
          fetch-depth: 0
          token: ${{ secrets.SERVICES_ACCESS_TOKEN }}

      - name: Fix ellipsise in strings
        run: .github/scripts/strings_reader.py

      - name: Commit and push
        env:
          USER_NAME: ${{ secrets.USER_NAME }}
          USER_EMAIL: ${{ secrets.USER_EMAIL }}
        run: .github/scripts/commit_and_push_string_fixes.sh
